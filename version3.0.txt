//fetching using geocodingBase, openweathermap api version 3.0
const api = {
  key: "fcc8de7015bbb202209bbf0261babf4c",
  geocodingBase: "https://api.openweathermap.org/geo/1.0/direct",
  weatherBase: "https://api.openweathermap.org/data/3.0/onecall"
}

// Selects the search box element and adds an event listener for the keypress which triggers setQuery
const searchbox = document.querySelector('.search-box');
searchbox.addEventListener('keypress', setQuery);

// Check if enter key (keyCode 13) is pressed to call getLatLon
function setQuery(evt) {
  if (evt.keyCode === 13) {
    clearPreviousResults();  // Clear previous results or errors
    getLatLon(searchbox.value);  // Get lat/lon of the entered city
  }
}

// Fetches latitude and longitude for a given city name using Geocoding API
function getLatLon(city) {
  fetch(`${api.geocodingBase}?q=${city}&limit=1&appid=${api.key}`)
    .then(response => {
      if (!response.ok) {
        throw new Error('No such city/country');
      }
      return response.json();
    })
    .then(data => {
      if (data.length === 0) {
        throw new Error('No such city/country');
      }
      const { lat, lon } = data[0];  // Extract lat/lon
      getResults(lat, lon);  // Fetch weather data using lat/lon
    })
    .catch(error => {
      displayError(error.message);
    });
}

// Fetches weather data from the One Call API 3.0 using lat/lon
function getResults(lat, lon) {
  fetch(`${api.weatherBase}?lat=${lat}&lon=${lon}&units=metric&appid=${api.key}`)
    .then(response => {
      if (!response.ok) {
        throw new Error('Error fetching weather data');
      }
      return response.json();
    })
    .then(displayResults)
    .catch(error => {
      displayError(error.message);
    });
}

// Updates the DOM with weather data
function displayResults(weather) {
  let city = document.querySelector('.location .city');
  city.innerText = `Latitude: ${weather.lat}, Longitude: ${weather.lon}`;

  let now = new Date();
  let date = document.querySelector('.location .date');
  date.innerText = dateBuilder(now);

  let temp = document.querySelector('.current .temp');
  temp.innerHTML = `${Math.round(weather.current.temp)}<span>°c</span>`;

  let weather_el = document.querySelector('.current .weather');
  weather_el.innerText = weather.current.weather[0].main;

  let hilow = document.querySelector('.hi-low');
  hilow.innerText = `${Math.round(weather.daily[0].temp.min)}°c / ${Math.round(weather.daily[0].temp.max)}°c`;
}

// Displays error messages
function displayError(message) {
  let city = document.querySelector('.location .city');
  city.innerText = message;

  let date = document.querySelector('.location .date');
  date.innerText = '';

  let temp = document.querySelector('.current .temp');
  temp.innerHTML = '';

  let weather_el = document.querySelector('.current .weather');
  weather_el.innerText = '';

  let hilow = document.querySelector('.hi-low');
  hilow.innerText = '';
}

// Clears previous search results
function clearPreviousResults() {
  let city = document.querySelector('.location .city');
  city.innerText = '';

  let date = document.querySelector('.location .date');
  date.innerText = '';

  let temp = document.querySelector('.current .temp');
  temp.innerHTML = '';

  let weather_el = document.querySelector('.current .weather');
  weather_el.innerText = '';

  let hilow = document.querySelector('.hi-low');
  hilow.innerText = '';
}

// Formats the current date into a readable string
function dateBuilder(d) {
  let months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
  let days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

  let day = days[d.getDay()];
  let date = d.getDate();
  let month = months[d.getMonth()];
  let year = d.getFullYear();

  return `${day} ${date} ${month} ${year}`;
}






//another fetching using 2.5 version
const api = {
  key: "fcc8de7015bbb202209bbf0261babf4c",
  base: "https://api.openweathermap.org/data/3.0/onecall"
}

// Selects the search box element and adds an event listener for the keypress which triggers setQuery
const searchbox = document.querySelector('.search-box');
searchbox.addEventListener('keypress', setQuery);

// Check if enter key (keyCode 13) is pressed to call getLatLon
function setQuery(evt) {
  if (evt.keyCode === 13) {
    clearPreviousResults();  // Clear previous results or errors
    getLatLon(searchbox.value);  // Get lat/lon of the entered city
  }
}

// Fetches latitude and longitude for a given city name
function getLatLon(city) {
  fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api.key}`)
    .then(response => {
      if (!response.ok) {
        throw new Error('No such city/country');
      }
      return response.json();
    })
    .then(data => {
      const { lat, lon } = data.coord;  // Extract lat/lon
      getResults(lat, lon);  // Fetch weather data using lat/lon
    })
    .catch(error => {
      displayError(error.message);
    });
}

// Fetches weather data from the One Call API 3.0 using lat/lon
function getResults(lat, lon) {
  fetch(`${api.base}?lat=${lat}&lon=${lon}&units=metric&appid=${api.key}`)
    .then(response => {
      if (!response.ok) {
        throw new Error('Error fetching weather data');
      }
      return response.json();
    })
    .then(displayResults)
    .catch(error => {
      displayError(error.message);
    });
}

// Updates the DOM with weather data
function displayResults(weather) {
  let city = document.querySelector('.location .city');
  city.innerText = `${weather.timezone}`;

  let now = new Date();
  let date = document.querySelector('.location .date');
  date.innerText = dateBuilder(now);

  let temp = document.querySelector('.current .temp');
  temp.innerHTML = `${Math.round(weather.current.temp)}<span>°c</span>`;

  let weather_el = document.querySelector('.current .weather');
  weather_el.innerText = weather.current.weather[0].main;

  let hilow = document.querySelector('.hi-low');
  hilow.innerText = `${Math.round(weather.daily[0].temp.min)}°c / ${Math.round(weather.daily[0].temp.max)}°c`;
}

// Displays error messages
function displayError(message) {
  let city = document.querySelector('.location .city');
  city.innerText = message;

  let date = document.querySelector('.location .date');
  date.innerText = '';

  let temp = document.querySelector('.current .temp');
  temp.innerHTML = '';

  let weather_el = document.querySelector('.current .weather');
  weather_el.innerText = '';

  let hilow = document.querySelector('.hi-low');
  hilow.innerText = '';
}

// Clears previous search results
function clearPreviousResults() {
  let city = document.querySelector('.location .city');
  city.innerText = '';

  let date = document.querySelector('.location .date');
  date.innerText = '';

  let temp = document.querySelector('.current .temp');
  temp.innerHTML = '';

  let weather_el = document.querySelector('.current .weather');
  weather_el.innerText = '';

  let hilow = document.querySelector('.hi-low');
  hilow.innerText = '';
}

// Formats the current date into a readable string
function dateBuilder(d) {
  let months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
  let days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

  let day = days[d.getDay()];
  let date = d.getDate();
  let month = months[d.getMonth()];
  let year = d.getFullYear();

  return `${day} ${date} ${month} ${year}`;
}


